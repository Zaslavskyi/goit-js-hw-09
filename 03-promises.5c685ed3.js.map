{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAEhCC,GADYF,SAASC,cAAc,yBACvBD,SAASC,cAAc,yBACnCE,EAAWH,SAASC,cAAc,uBAClCG,EAAUJ,SAASC,cAAc,sBAsBvC,SAASI,GAAcC,SAACA,EAAQC,MAAEA,IAChC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE1BA,EAAM,G,CA9BbR,EAAOgB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,EAASC,OAAOjB,EAAUkB,OAChC,IAAIC,EAAQF,OAAOhB,EAASiB,OAC5B,MAAME,EAAOH,OAAOf,EAAQgB,OAE5B,IAAK,IAAIG,EAAW,EAAGA,GAAYL,EAAQK,GAAW,EACpDlB,EAAc,CAACC,SAAAiB,EAAUhB,MAAAc,IACxBG,MAAK,EAAClB,SAACA,EAAQC,MAAEA,MAChBkB,QAAQC,IAAI,qBAAqBpB,QAAeC,MAAU,IAE3DoB,OAAM,EAACrB,SAACA,EAAQC,MAAEA,MACjBkB,QAAQC,IAAI,oBAAoBpB,QAAeC,MAAU,IAE3Dc,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst btnSubmit = document.querySelector('button[type=\"submit\"]');\nconst amountRef = document.querySelector('input[name=\"amount\"]');\nconst delayRef = document.querySelector('input[name=\"delay\"]');\nconst stepRef = document.querySelector('input[name=\"step\"]');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const amount = Number(amountRef.value);\n  let delay = Number(delayRef.value);\n  const step = Number(stepRef.value);\n\n  for (let position = 1; position <= amount; position +=1) {\n    createPromise({position, delay})\n    .then(({position, delay}) => {\n      console.log(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n      console.log(`Rejected promice ${position} in ${delay}ms`);\n    });\n    delay += step;\n  };\n};\n\nfunction createPromise({position, delay}) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n};\n\n\n\n// form.addEventListener('submit', onFormSubmit);\n\n// function onFormSubmit(e) {\n//   e.preventDefault();\n\n//   const {\n//     elements: {delay, step, amount},\n//   } = e.currentTarget;\n\n//   let currentDelay = Number(delay.value);\n\n//   for (let i = 1; i <= Number(amount.value); i+=1) {\n//     createPromise(i, currentDelay)\n//     .then(({position, delay}) => {\n//       Notiflix.Notify.success(`Fulfilledvpromise ${position} in ${delay}ms`);\n//     })\n//     .cath(({position, delay}) => {\n//       Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n//     });\n\n//     currentDelay += Number(step.value);\n//   };\n// };\n\n"],"names":["parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$amountRef","$47d4ff9957288465$var$delayRef","$47d4ff9957288465$var$stepRef","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","amount","Number","value","delay1","step","position1","then","console","log","catch"],"version":3,"file":"03-promises.5c685ed3.js.map"}