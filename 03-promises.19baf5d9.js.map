{"mappings":"gfAAAA,EAAA,SAEA,IAAMC,EAASC,SAASC,cAAc,SAEhCC,GADYF,SAASC,cAAc,yBACvBD,SAASC,cAAc,yBACnCE,EAAWH,SAASC,cAAc,uBAClCG,EAAUJ,SAASC,cAAc,sBAsBvC,SAASI,EAAcC,G,IAACC,EAADD,EAACC,SAAUC,EAAXF,EAAWE,MAChC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IA9BPT,EAAOiB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAEC,iBAKF,IAJA,IAAMC,EAASC,OAAOlB,EAAUmB,OAC5BC,EAAQF,OAAOjB,EAASkB,OACtBE,EAAOH,OAAOhB,EAAQiB,OAEnBG,EAAW,EAAGA,GAAYL,EAAQK,GAAW,EACpDnB,EAAc,CAACE,SAAAiB,EAAUhB,MAAAc,IACxBG,MAAK,SAAAnB,G,IAAEC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAChBkB,QAAQC,IAAI,qBAAoCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAEvDqB,OAAM,SAAAvB,G,IAAEC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjBkB,QAAQC,IAAI,oBAAmCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAEvDc,GAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst btnSubmit = document.querySelector('button[type=\"submit\"]');\nconst amountRef = document.querySelector('input[name=\"amount\"]');\nconst delayRef = document.querySelector('input[name=\"delay\"]');\nconst stepRef = document.querySelector('input[name=\"step\"]');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const amount = Number(amountRef.value);\n  let delay = Number(delayRef.value);\n  const step = Number(stepRef.value);\n\n  for (let position = 1; position <= amount; position +=1) {\n    createPromise({position, delay})\n    .then(({position, delay}) => {\n      console.log(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({position, delay}) => {\n      console.log(`Rejected promice ${position} in ${delay}ms`);\n    });\n    delay += step;\n  };\n};\n\nfunction createPromise({position, delay}) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n};\n\n\n\n// form.addEventListener('submit', onFormSubmit);\n\n// function onFormSubmit(e) {\n//   e.preventDefault();\n\n//   const {\n//     elements: {delay, step, amount},\n//   } = e.currentTarget;\n\n//   let currentDelay = Number(delay.value);\n\n//   for (let i = 1; i <= Number(amount.value); i+=1) {\n//     createPromise(i, currentDelay)\n//     .then(({position, delay}) => {\n//       Notiflix.Notify.success(`Fulfilledvpromise ${position} in ${delay}ms`);\n//     })\n//     .cath(({position, delay}) => {\n//       Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n//     });\n\n//     currentDelay += Number(step.value);\n//   };\n// };\n\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$amountRef","$ce04d3a99e08e73b$var$delayRef","$ce04d3a99e08e73b$var$stepRef","$ce04d3a99e08e73b$var$createPromise","param","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","amount","Number","value","delay1","step","position1","then","console","log","concat","catch"],"version":3,"file":"03-promises.19baf5d9.js.map"}